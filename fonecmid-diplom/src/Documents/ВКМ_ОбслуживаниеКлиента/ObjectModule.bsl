#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
	
	Если Не ДоговорАбонентскоеОбслуживаниеДействующий(Договор, Дата) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Договор не является договором абонентского обслуживания или не действует";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	СуммаЧасовКОплате = ВыполненныеРаботы.Итог("ЧасыКОплатеКлиенту");			
	Если СуммаЧасовКОплате > 0 Тогда
		
		Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
		Движение.Период = Дата;
		Движение.Клиент = Клиент;
		Движение.Договор = Договор;
		Движение.КоличествоЧасов = СуммаЧасовКОплате;
		Движение.СуммаКОплате = СуммаЧасовКОплате * СтоимостьЧасаРаботыПоДоговору(Договор);
		
	КонецЕсли;				
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции 

Функция ДоговорАбонентскоеОбслуживаниеДействующий(Договор, Дата)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентов.ВКМ_ДатаНачалаДействияДоговора КАК ДатаНачала,
		|	ДоговорыКонтрагентов.ВКМ_ДатаОкончанияДействияДоговора КАК ДатаОкончания,
		|	ДоговорыКонтрагентов.ВидДоговора
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Договор);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	ВидДоговора = Выборка.ВидДоговора;
		
	Если Не ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.АбонентскоеОбслуживание 
		Или Выборка.ДатаНачала > Дата Или Выборка.ДатаОкончания < Дата Тогда
		 Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Функция СтоимостьЧасаРаботыПоДоговору(Договор)
		
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентов.ВКМ_СтоимостьЧасаРаботы КАК СтоимостьЧасаРаботы
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.Сёсылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Договор);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Возврат Выборка.СтоимостьЧасаРаботы;
	
КонецФункции

#Конецобласти








