#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Элементы.Год.СписокВыбора.ЗагрузитьЗначения(СформироватьСписокГодов(Год(Объект.Дата)));
	ОформитьСтрокиНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ГодОбработкаВыбора(Элемент, ВыбранноеЗначение, ДополнительныеДанные, ВыборДобавлением, СтандартнаяОбработка)
	Если ВыбранноеЗначение = "Ранее" Тогда
		Элементы.Год.СписокВыбора.ЗагрузитьЗначения(СформироватьСписокГодов(Элемент.СписокВыбора[1].Значение - 10));
	КонецЕсли;
	Если ВыбранноеЗначение = "Позднее" Тогда
		Элементы.Год.СписокВыбора.ЗагрузитьЗначения(СформироватьСписокГодов(Элемент.СписокВыбора[9].Значение + 10));
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыОтпускаСотрудников

&НаКлиенте
Процедура ОтпускаСотрудниковДатаНачалаПриИзменении(Элемент)
	ТекущиеДанные = Элементы.ОтпускаСотрудников.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекущиеДанные.ДатаОкончания) Тогда
		ТекущиеДанные.ДнейОтпуска = РассчитатьДниОтпуска(ТекущиеДанные);
		ОформитьСтрокиНаСервере();
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ОтпускаСотрудниковДатаОкончанияПриИзменении(Элемент)
	ТекущиеДанные = Элементы.ОтпускаСотрудников.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекущиеДанные.ДатаНачала) Тогда
		ТекущиеДанные.ДнейОтпуска = РассчитатьДниОтпуска(ТекущиеДанные);
		ОформитьСтрокиНаСервере();
	КонецЕсли;
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура АнализГрафика(Команда)
	АдресХранилища = АдресХранилищаНаСервере();
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("АдресХранилища", АдресХранилища);
	ОткрытьФорму("Документ.ВКМ_ГрафикОтпусков.Форма.АнализГрафика", ПараметрыФормы);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Функция СформироватьСписокГодов(НачальныйГод)
	
	СписокГодов = Новый Массив;
	СписокГодов.Добавить("Ранее");
	Для Сч = 0 По 10 Цикл
		СписокГодов.Добавить(НачальныйГод - 5 + Сч);
	КонецЦикла;
	СписокГодов.Добавить("Позднее");
	
	Возврат СписокГодов;
	
КонецФункции

&НаКлиенте
Функция РассчитатьДниОтпуска(ТекущиеДанные)
	Возврат (ТекущиеДанные.ДатаОкончания - ТекущиеДанные.ДатаНачала) / 86400;
КонецФункции

&НаСервере
Процедура ОформитьСтрокиНаСервере()
	
	ТаблицаЗначений = Объект.ОтпускаСотрудников.Выгрузить(, "Сотрудник, ДнейОтпуска");
	ТаблицаЗначений.Свернуть("Сотрудник", "ДнейОтпуска");
	
	Для Каждого СтрокаТз Из ТаблицаЗначений Цикл
		
		Отбор = Новый Структура;
		Отбор.Вставить("Сотрудник", СтрокаТз.Сотрудник);
		
		НайденныеСтроки = Объект.ОтпускаСотрудников.НайтиСтроки(Отбор);
		Для Каждого Строка Из НайденныеСтроки Цикл
			Если СтрокаТз.ДнейОтпуска > 28 Тогда
				Строка.Превышение = Истина;
			Иначе
				Строка.Превышение = Ложь;
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
	УсловноеОформление.Элементы.Очистить();
	Элемент = УсловноеОформление.Элементы.Добавить();
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ОтпускаСотрудников");
	Отбор = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ОтпускаСотрудников.Превышение");
	Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	Отбор.ПравоеЗначение = Истина;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.Бирюзовый);

КонецПроцедуры

&НаСервере
Функция АдресХранилищаНаСервере()
	Возврат ПоместитьВоВременноеХранилище(Объект.ОтпускаСотрудников.Выгрузить(, "Сотрудник, ДатаНачала, ДатаОкончания"));
КонецФункции

#КонецОбласти














